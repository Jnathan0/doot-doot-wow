plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.wilsonbot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext.springPort = System.getenv('BACKEND_PORT')?: '42069'
ext.postgresUrl = System.getenv('POSTGRES_URL')?: 'jdbc:postgresql://localhost:5432/sounds'
ext.postgresUser = System.getenv('POSTGRES_USERNAME')?: 'postgres'
ext.postgresPassword = System.getenv('POSTGRES_PASSWORD')?: null

bootRun {
	args += ["--server.port=${springPort}", 
		"--spring.datasource.url=${postgresUrl}", 
		"--spring.datasource.username=${postgresUser}", 
		"--spring.datasource.password=${postgresPassword}",
		"--spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true",
		"--spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect",
		"--spring.jpa.hibernate.ddl-auto=update"]
}


springBoot {
	mainClass = 'com.wilsonbot.backend.Application'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.postgresql:postgresql"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
